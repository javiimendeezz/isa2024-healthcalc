PS C:\Users\mipri\OneDrive\Escritorio\sftw_avanzado\practica_1\isa2024-healthcalc> mvn test
[INFO] Scanning for projects...
[INFO] 
[INFO] ---------------------------< uma:HealthCalc >---------------------------
[INFO] Building HealthCalc 0.0.1-SNAPSHOT
[INFO]   from pom.xml
[INFO] --------------------------------[ jar ]---------------------------------
[INFO] 
[INFO] --- resources:3.3.1:resources (default-resources) @ HealthCalc ---
[INFO] skip non existing resourceDirectory C:\Users\mipri\OneDrive\Escritorio\sftw_avanzado\practica_1\isa2024-healthcalc\src\main\resources
[INFO]
[INFO] --- compiler:3.11.0:compile (default-compile) @ HealthCalc ---
[INFO] Nothing to compile - all classes are up to date
[INFO]
[INFO] --- resources:3.3.1:testResources (default-testResources) @ HealthCalc ---
[INFO] Copying 2 resources from src\test\resources to target\test-classes
[INFO] 
[INFO] --- compiler:3.11.0:testCompile (default-testCompile) @ HealthCalc ---
[INFO] Nothing to compile - all classes are up to date
[INFO]
[INFO] --- surefire:3.0.0-M7:test (default-test) @ HealthCalc ---
[INFO] Using auto detected provider org.apache.maven.surefire.junitplatform.JUnitPlatformProvider
[INFO] 
[INFO] -------------------------------------------------------
[INFO]  T E S T S
[INFO] -------------------------------------------------------
[INFO] Running uma.bdd.RunCucumberTest

@tag @tag1
Scenario: Calcular BMR con entrada valida                # uma/historias_bmr.feature:32
  Given tengo una calculadora de salud                   # uma.bdd.StepDefinitions.tengo_una_calculadora_de_salud()
  When calculo el BMR cuya entrada es 70.0, 180, 25, "m" # uma.bdd.StepDefinitions.calculo_el_bmr_cuya_entrada_es(float,java.lang.Integer,java.lang.Integer,java.lang.String)
  Then el BMR ser 1705.0                                 # uma.bdd.StepDefinitions.el_bmr_ser(float)

@tag @tag1
Scenario: Calcular BMR con entrada valida                # uma/historias_bmr.feature:33
  Given tengo una calculadora de salud                   # uma.bdd.StepDefinitions.tengo_una_calculadora_de_salud()
  When calculo el BMR cuya entrada es 80.0, 170, 30, "m" # uma.bdd.StepDefinitions.calculo_el_bmr_cuya_entrada_es(float,java.lang.Integer,java.lang.Integer,java.lang.String)
  Then el BMR ser 1717.5                                 # uma.bdd.StepDefinitions.el_bmr_ser(float)

@tag @tag1
Scenario: Calcular BMR con entrada valida                # uma/historias_bmr.feature:34
  Given tengo una calculadora de salud                   # uma.bdd.StepDefinitions.tengo_una_calculadora_de_salud()
  When calculo el BMR cuya entrada es 90.0, 200, 35, "m" # uma.bdd.StepDefinitions.calculo_el_bmr_cuya_entrada_es(float,java.lang.Integer,java.lang.Integer,java.lang.String)
  Then el BMR ser 1980.0                                 # uma.bdd.StepDefinitions.el_bmr_ser(float)

@tag @tag1
Scenario: Calcular BMR con entrada valida                # uma/historias_bmr.feature:35
  Given tengo una calculadora de salud                   # uma.bdd.StepDefinitions.tengo_una_calculadora_de_salud()
  When calculo el BMR cuya entrada es 65.0, 140, 40, "m" # uma.bdd.StepDefinitions.calculo_el_bmr_cuya_entrada_es(float,java.lang.Integer,java.lang.Integer,java.lang.String)
  Then el BMR ser 1330.0                                 # uma.bdd.StepDefinitions.el_bmr_ser(float)

@tag @tag1
Scenario: Calcular BMR con entrada valida                # uma/historias_bmr.feature:36
  Given tengo una calculadora de salud                   # uma.bdd.StepDefinitions.tengo_una_calculadora_de_salud()
  When calculo el BMR cuya entrada es 75.0, 300, 45, "m" # uma.bdd.StepDefinitions.calculo_el_bmr_cuya_entrada_es(float,java.lang.Integer,java.lang.Integer,java.lang.String)
  Then el BMR ser 2405.0                                 # uma.bdd.StepDefinitions.el_bmr_ser(float)

@tag @tag1
Scenario: Calcular BMR con entrada valida                # uma/historias_bmr.feature:37
  Given tengo una calculadora de salud                   # uma.bdd.StepDefinitions.tengo_una_calculadora_de_salud()
  When calculo el BMR cuya entrada es 55.0, 180, 25, "w" # uma.bdd.StepDefinitions.calculo_el_bmr_cuya_entrada_es(float,java.lang.Integer,java.lang.Integer,java.lang.String)
  Then el BMR ser 1389.0                                 # uma.bdd.StepDefinitions.el_bmr_ser(float)

@tag @tag1
Scenario: Calcular BMR con entrada valida                # uma/historias_bmr.feature:38
  Given tengo una calculadora de salud                   # uma.bdd.StepDefinitions.tengo_una_calculadora_de_salud()
  When calculo el BMR cuya entrada es 65.0, 170, 30, "w" # uma.bdd.StepDefinitions.calculo_el_bmr_cuya_entrada_es(float,java.lang.Integer,java.lang.Integer,java.lang.String)
  Then el BMR ser 1401.5                                 # uma.bdd.StepDefinitions.el_bmr_ser(float)

@tag @tag1
Scenario: Calcular BMR con entrada valida                # uma/historias_bmr.feature:39
  Given tengo una calculadora de salud                   # uma.bdd.StepDefinitions.tengo_una_calculadora_de_salud()
  When calculo el BMR cuya entrada es 70.0, 200, 35, "w" # uma.bdd.StepDefinitions.calculo_el_bmr_cuya_entrada_es(float,java.lang.Integer,java.lang.Integer,java.lang.String)
  Then el BMR ser 1614.0                                 # uma.bdd.StepDefinitions.el_bmr_ser(float)

@tag @tag1
Scenario: Calcular BMR con entrada valida                # uma/historias_bmr.feature:40
  Given tengo una calculadora de salud                   # uma.bdd.StepDefinitions.tengo_una_calculadora_de_salud()
  When calculo el BMR cuya entrada es 50.0, 140, 40, "w" # uma.bdd.StepDefinitions.calculo_el_bmr_cuya_entrada_es(float,java.lang.Integer,java.lang.Integer,java.lang.String)
  Then el BMR ser 1014.0                                 # uma.bdd.StepDefinitions.el_bmr_ser(float)

@tag @tag1
Scenario: Calcular BMR con entrada valida                # uma/historias_bmr.feature:41
  Given tengo una calculadora de salud                   # uma.bdd.StepDefinitions.tengo_una_calculadora_de_salud()
  When calculo el BMR cuya entrada es 60.0, 300, 45, "w" # uma.bdd.StepDefinitions.calculo_el_bmr_cuya_entrada_es(float,java.lang.Integer,java.lang.Integer,java.lang.String)
  Then el BMR ser 2089.0                                 # uma.bdd.StepDefinitions.el_bmr_ser(float)

@tag @tag2
Scenario: Calcular BMR con argumentos no validos          # uma/historias_bmr.feature:51
  Given tengo una calculadora de salud                    # uma.bdd.StepDefinitions.tengo_una_calculadora_de_salud()
  When calculo el BMR cuya entrada es -70.0, 180, 25, "m" # uma.bdd.StepDefinitions.calculo_el_bmr_cuya_entrada_es(float,java.lang.Integer,java.lang.Integer,java.lang.String)
  Then el sistema lanza una excepcion                     # uma.bdd.StepDefinitions.el_sistema_lanza_una_excepcion()

@tag @tag2
Scenario: Calcular BMR con argumentos no validos          # uma/historias_bmr.feature:52
  Given tengo una calculadora de salud                    # uma.bdd.StepDefinitions.tengo_una_calculadora_de_salud()
  When calculo el BMR cuya entrada es -80.0, 170, 30, "m" # uma.bdd.StepDefinitions.calculo_el_bmr_cuya_entrada_es(float,java.lang.Integer,java.lang.Integer,java.lang.String)
  Then el sistema lanza una excepcion                     # uma.bdd.StepDefinitions.el_sistema_lanza_una_excepcion()

@tag @tag2
Scenario: Calcular BMR con argumentos no validos          # uma/historias_bmr.feature:53
  Given tengo una calculadora de salud                    # uma.bdd.StepDefinitions.tengo_una_calculadora_de_salud()
  When calculo el BMR cuya entrada es -90.0, 200, 35, "m" # uma.bdd.StepDefinitions.calculo_el_bmr_cuya_entrada_es(float,java.lang.Integer,java.lang.Integer,java.lang.String)
  Then el sistema lanza una excepcion                     # uma.bdd.StepDefinitions.el_sistema_lanza_una_excepcion()

@tag @tag2
Scenario: Calcular BMR con argumentos no validos          # uma/historias_bmr.feature:54
  Given tengo una calculadora de salud                    # uma.bdd.StepDefinitions.tengo_una_calculadora_de_salud()
  When calculo el BMR cuya entrada es -65.0, 140, 40, "m" # uma.bdd.StepDefinitions.calculo_el_bmr_cuya_entrada_es(float,java.lang.Integer,java.lang.Integer,java.lang.String)
  Then el sistema lanza una excepcion                     # uma.bdd.StepDefinitions.el_sistema_lanza_una_excepcion()

@tag @tag2
Scenario: Calcular BMR con argumentos no validos          # uma/historias_bmr.feature:55
  Given tengo una calculadora de salud                    # uma.bdd.StepDefinitions.tengo_una_calculadora_de_salud()
  When calculo el BMR cuya entrada es -75.0, 300, 45, "m" # uma.bdd.StepDefinitions.calculo_el_bmr_cuya_entrada_es(float,java.lang.Integer,java.lang.Integer,java.lang.String)
  Then el sistema lanza una excepcion                     # uma.bdd.StepDefinitions.el_sistema_lanza_una_excepcion()

@tag @tag2
Scenario: Calcular BMR con argumentos no validos          # uma/historias_bmr.feature:56
  Given tengo una calculadora de salud                    # uma.bdd.StepDefinitions.tengo_una_calculadora_de_salud()
  When calculo el BMR cuya entrada es -55.0, 180, 25, "w" # uma.bdd.StepDefinitions.calculo_el_bmr_cuya_entrada_es(float,java.lang.Integer,java.lang.Integer,java.lang.String)
  Then el sistema lanza una excepcion                     # uma.bdd.StepDefinitions.el_sistema_lanza_una_excepcion()

@tag @tag2
Scenario: Calcular BMR con argumentos no validos          # uma/historias_bmr.feature:57
  Given tengo una calculadora de salud                    # uma.bdd.StepDefinitions.tengo_una_calculadora_de_salud()
  When calculo el BMR cuya entrada es -65.0, 170, 30, "w" # uma.bdd.StepDefinitions.calculo_el_bmr_cuya_entrada_es(float,java.lang.Integer,java.lang.Integer,java.lang.String)
  Then el sistema lanza una excepcion                     # uma.bdd.StepDefinitions.el_sistema_lanza_una_excepcion()

@tag @tag2
Scenario: Calcular BMR con argumentos no validos          # uma/historias_bmr.feature:58
  Given tengo una calculadora de salud                    # uma.bdd.StepDefinitions.tengo_una_calculadora_de_salud()
  When calculo el BMR cuya entrada es -70.0, 200, 35, "w" # uma.bdd.StepDefinitions.calculo_el_bmr_cuya_entrada_es(float,java.lang.Integer,java.lang.Integer,java.lang.String)
  Then el sistema lanza una excepcion                     # uma.bdd.StepDefinitions.el_sistema_lanza_una_excepcion()

@tag @tag2
Scenario: Calcular BMR con argumentos no validos          # uma/historias_bmr.feature:59
  Given tengo una calculadora de salud                    # uma.bdd.StepDefinitions.tengo_una_calculadora_de_salud()
  When calculo el BMR cuya entrada es -50.0, 140, 40, "w" # uma.bdd.StepDefinitions.calculo_el_bmr_cuya_entrada_es(float,java.lang.Integer,java.lang.Integer,java.lang.String)
  Then el sistema lanza una excepcion                     # uma.bdd.StepDefinitions.el_sistema_lanza_una_excepcion()

@tag @tag2
Scenario: Calcular BMR con argumentos no validos          # uma/historias_bmr.feature:60
  Given tengo una calculadora de salud                    # uma.bdd.StepDefinitions.tengo_una_calculadora_de_salud()
  When calculo el BMR cuya entrada es -60.0, 300, 45, "w" # uma.bdd.StepDefinitions.calculo_el_bmr_cuya_entrada_es(float,java.lang.Integer,java.lang.Integer,java.lang.String)
  Then el sistema lanza una excepcion                     # uma.bdd.StepDefinitions.el_sistema_lanza_una_excepcion()

@tag @tag2
Scenario: Calcular BMR con argumentos no validos        # uma/historias_bmr.feature:61
  Given tengo una calculadora de salud                  # uma.bdd.StepDefinitions.tengo_una_calculadora_de_salud()
  When calculo el BMR cuya entrada es 70.0, 80, 25, "m" # uma.bdd.StepDefinitions.calculo_el_bmr_cuya_entrada_es(float,java.lang.Integer,java.lang.Integer,java.lang.String)
  Then el sistema lanza una excepcion                   # uma.bdd.StepDefinitions.el_sistema_lanza_una_excepcion()

@tag @tag2
Scenario: Calcular BMR con argumentos no validos        # uma/historias_bmr.feature:62
  Given tengo una calculadora de salud                  # uma.bdd.StepDefinitions.tengo_una_calculadora_de_salud()
  When calculo el BMR cuya entrada es 80.0, 70, 30, "m" # uma.bdd.StepDefinitions.calculo_el_bmr_cuya_entrada_es(float,java.lang.Integer,java.lang.Integer,java.lang.String)
  Then el sistema lanza una excepcion                   # uma.bdd.StepDefinitions.el_sistema_lanza_una_excepcion()

@tag @tag2
Scenario: Calcular BMR con argumentos no validos          # uma/historias_bmr.feature:63
  Given tengo una calculadora de salud                    # uma.bdd.StepDefinitions.tengo_una_calculadora_de_salud()
  When calculo el BMR cuya entrada es 90.0, 2000, 35, "m" # uma.bdd.StepDefinitions.calculo_el_bmr_cuya_entrada_es(float,java.lang.Integer,java.lang.Integer,java.lang.String)
  Then el sistema lanza una excepcion                     # uma.bdd.StepDefinitions.el_sistema_lanza_una_excepcion()

@tag @tag2
Scenario: Calcular BMR con argumentos no validos          # uma/historias_bmr.feature:64
  Given tengo una calculadora de salud                    # uma.bdd.StepDefinitions.tengo_una_calculadora_de_salud()
  When calculo el BMR cuya entrada es 65.0, 1400, 40, "m" # uma.bdd.StepDefinitions.calculo_el_bmr_cuya_entrada_es(float,java.lang.Integer,java.lang.Integer,java.lang.String)
  Then el sistema lanza una excepcion                     # uma.bdd.StepDefinitions.el_sistema_lanza_una_excepcion()

@tag @tag2
Scenario: Calcular BMR con argumentos no validos          # uma/historias_bmr.feature:65
  Given tengo una calculadora de salud                    # uma.bdd.StepDefinitions.tengo_una_calculadora_de_salud()
  When calculo el BMR cuya entrada es 75.0, 3000, 45, "m" # uma.bdd.StepDefinitions.calculo_el_bmr_cuya_entrada_es(float,java.lang.Integer,java.lang.Integer,java.lang.String)
  Then el sistema lanza una excepcion                     # uma.bdd.StepDefinitions.el_sistema_lanza_una_excepcion()

@tag @tag2
Scenario: Calcular BMR con argumentos no validos         # uma/historias_bmr.feature:66
  Given tengo una calculadora de salud                   # uma.bdd.StepDefinitions.tengo_una_calculadora_de_salud()
  When calculo el BMR cuya entrada es 55.0, 139, 25, "w" # uma.bdd.StepDefinitions.calculo_el_bmr_cuya_entrada_es(float,java.lang.Integer,java.lang.Integer,java.lang.String)
  Then el sistema lanza una excepcion                    # uma.bdd.StepDefinitions.el_sistema_lanza_una_excepcion()

@tag @tag2
Scenario: Calcular BMR con argumentos no validos        # uma/historias_bmr.feature:67
  Given tengo una calculadora de salud                  # uma.bdd.StepDefinitions.tengo_una_calculadora_de_salud()
  When calculo el BMR cuya entrada es 65.0, 17, 30, "w" # uma.bdd.StepDefinitions.calculo_el_bmr_cuya_entrada_es(float,java.lang.Integer,java.lang.Integer,java.lang.String)
  Then el sistema lanza una excepcion                   # uma.bdd.StepDefinitions.el_sistema_lanza_una_excepcion()

@tag @tag2
Scenario: Calcular BMR con argumentos no validos       # uma/historias_bmr.feature:68
  Given tengo una calculadora de salud                 # uma.bdd.StepDefinitions.tengo_una_calculadora_de_salud()
  When calculo el BMR cuya entrada es 70.0, 2, 35, "w" # uma.bdd.StepDefinitions.calculo_el_bmr_cuya_entrada_es(float,java.lang.Integer,java.lang.Integer,java.lang.String)
  Then el sistema lanza una excepcion                  # uma.bdd.StepDefinitions.el_sistema_lanza_una_excepcion()

@tag @tag2
Scenario: Calcular BMR con argumentos no validos       # uma/historias_bmr.feature:69
  Given tengo una calculadora de salud                 # uma.bdd.StepDefinitions.tengo_una_calculadora_de_salud()
  When calculo el BMR cuya entrada es 50.0, 1, 40, "w" # uma.bdd.StepDefinitions.calculo_el_bmr_cuya_entrada_es(float,java.lang.Integer,java.lang.Integer,java.lang.String)
  Then el sistema lanza una excepcion                  # uma.bdd.StepDefinitions.el_sistema_lanza_una_excepcion()

@tag @tag2
Scenario: Calcular BMR con argumentos no validos         # uma/historias_bmr.feature:70
  Given tengo una calculadora de salud                   # uma.bdd.StepDefinitions.tengo_una_calculadora_de_salud()
  When calculo el BMR cuya entrada es 60.0, 301, 45, "w" # uma.bdd.StepDefinitions.calculo_el_bmr_cuya_entrada_es(float,java.lang.Integer,java.lang.Integer,java.lang.String)
  Then el sistema lanza una excepcion                    # uma.bdd.StepDefinitions.el_sistema_lanza_una_excepcion()

@tag @tag2
Scenario: Calcular BMR con argumentos no validos          # uma/historias_bmr.feature:71
  Given tengo una calculadora de salud                    # uma.bdd.StepDefinitions.tengo_una_calculadora_de_salud()
  When calculo el BMR cuya entrada es 70.0, 180, -25, "m" # uma.bdd.StepDefinitions.calculo_el_bmr_cuya_entrada_es(float,java.lang.Integer,java.lang.Integer,java.lang.String)
  Then el sistema lanza una excepcion                     # uma.bdd.StepDefinitions.el_sistema_lanza_una_excepcion()

@tag @tag2
Scenario: Calcular BMR con argumentos no validos          # uma/historias_bmr.feature:72
  Given tengo una calculadora de salud                    # uma.bdd.StepDefinitions.tengo_una_calculadora_de_salud()
  When calculo el BMR cuya entrada es 80.0, 170, -30, "m" # uma.bdd.StepDefinitions.calculo_el_bmr_cuya_entrada_es(float,java.lang.Integer,java.lang.Integer,java.lang.String)
  Then el sistema lanza una excepcion                     # uma.bdd.StepDefinitions.el_sistema_lanza_una_excepcion()

@tag @tag2
Scenario: Calcular BMR con argumentos no validos          # uma/historias_bmr.feature:73
  Given tengo una calculadora de salud                    # uma.bdd.StepDefinitions.tengo_una_calculadora_de_salud()
  When calculo el BMR cuya entrada es 90.0, 200, -35, "m" # uma.bdd.StepDefinitions.calculo_el_bmr_cuya_entrada_es(float,java.lang.Integer,java.lang.Integer,java.lang.String)
  Then el sistema lanza una excepcion                     # uma.bdd.StepDefinitions.el_sistema_lanza_una_excepcion()

@tag @tag2
Scenario: Calcular BMR con argumentos no validos          # uma/historias_bmr.feature:74
  Given tengo una calculadora de salud                    # uma.bdd.StepDefinitions.tengo_una_calculadora_de_salud()
  When calculo el BMR cuya entrada es 65.0, 140, -40, "m" # uma.bdd.StepDefinitions.calculo_el_bmr_cuya_entrada_es(float,java.lang.Integer,java.lang.Integer,java.lang.String)
  Then el sistema lanza una excepcion                     # uma.bdd.StepDefinitions.el_sistema_lanza_una_excepcion()

@tag @tag2
Scenario: Calcular BMR con argumentos no validos          # uma/historias_bmr.feature:75
  Given tengo una calculadora de salud                    # uma.bdd.StepDefinitions.tengo_una_calculadora_de_salud()
  When calculo el BMR cuya entrada es 75.0, 300, -45, "m" # uma.bdd.StepDefinitions.calculo_el_bmr_cuya_entrada_es(float,java.lang.Integer,java.lang.Integer,java.lang.String)
  Then el sistema lanza una excepcion                     # uma.bdd.StepDefinitions.el_sistema_lanza_una_excepcion()

@tag @tag2
Scenario: Calcular BMR con argumentos no validos          # uma/historias_bmr.feature:76
  Given tengo una calculadora de salud                    # uma.bdd.StepDefinitions.tengo_una_calculadora_de_salud()
  When calculo el BMR cuya entrada es 55.0, 180, -25, "w" # uma.bdd.StepDefinitions.calculo_el_bmr_cuya_entrada_es(float,java.lang.Integer,java.lang.Integer,java.lang.String)
  Then el sistema lanza una excepcion                     # uma.bdd.StepDefinitions.el_sistema_lanza_una_excepcion()

@tag @tag2
Scenario: Calcular BMR con argumentos no validos          # uma/historias_bmr.feature:77
  Given tengo una calculadora de salud                    # uma.bdd.StepDefinitions.tengo_una_calculadora_de_salud()
  When calculo el BMR cuya entrada es 65.0, 170, -30, "w" # uma.bdd.StepDefinitions.calculo_el_bmr_cuya_entrada_es(float,java.lang.Integer,java.lang.Integer,java.lang.String)
  Then el sistema lanza una excepcion                     # uma.bdd.StepDefinitions.el_sistema_lanza_una_excepcion()

@tag @tag2
Scenario: Calcular BMR con argumentos no validos          # uma/historias_bmr.feature:78
  Given tengo una calculadora de salud                    # uma.bdd.StepDefinitions.tengo_una_calculadora_de_salud()
  When calculo el BMR cuya entrada es 70.0, 200, -35, "w" # uma.bdd.StepDefinitions.calculo_el_bmr_cuya_entrada_es(float,java.lang.Integer,java.lang.Integer,java.lang.String)
  Then el sistema lanza una excepcion                     # uma.bdd.StepDefinitions.el_sistema_lanza_una_excepcion()

@tag @tag2
Scenario: Calcular BMR con argumentos no validos          # uma/historias_bmr.feature:79
  Given tengo una calculadora de salud                    # uma.bdd.StepDefinitions.tengo_una_calculadora_de_salud()
  When calculo el BMR cuya entrada es 50.0, 140, -40, "w" # uma.bdd.StepDefinitions.calculo_el_bmr_cuya_entrada_es(float,java.lang.Integer,java.lang.Integer,java.lang.String)
  Then el sistema lanza una excepcion                     # uma.bdd.StepDefinitions.el_sistema_lanza_una_excepcion()

@tag @tag2
Scenario: Calcular BMR con argumentos no validos          # uma/historias_bmr.feature:80
  Given tengo una calculadora de salud                    # uma.bdd.StepDefinitions.tengo_una_calculadora_de_salud()
  When calculo el BMR cuya entrada es 60.0, 300, -45, "w" # uma.bdd.StepDefinitions.calculo_el_bmr_cuya_entrada_es(float,java.lang.Integer,java.lang.Integer,java.lang.String)
  Then el sistema lanza una excepcion                     # uma.bdd.StepDefinitions.el_sistema_lanza_una_excepcion()

@tag @tag2
Scenario: Calcular BMR con argumentos no validos         # uma/historias_bmr.feature:81
  Given tengo una calculadora de salud                   # uma.bdd.StepDefinitions.tengo_una_calculadora_de_salud()
  When calculo el BMR cuya entrada es 70.0, 180, 25, "v" # uma.bdd.StepDefinitions.calculo_el_bmr_cuya_entrada_es(float,java.lang.Integer,java.lang.Integer,java.lang.String)
  Then el sistema lanza una excepcion                    # uma.bdd.StepDefinitions.el_sistema_lanza_una_excepcion()

@tag @tag2
Scenario: Calcular BMR con argumentos no validos         # uma/historias_bmr.feature:82
  Given tengo una calculadora de salud                   # uma.bdd.StepDefinitions.tengo_una_calculadora_de_salud()
  When calculo el BMR cuya entrada es 80.0, 170, 30, "ñ" # uma.bdd.StepDefinitions.calculo_el_bmr_cuya_entrada_es(float,java.lang.Integer,java.lang.Integer,java.lang.String)
  Then el sistema lanza una excepcion                    # uma.bdd.StepDefinitions.el_sistema_lanza_una_excepcion()

@tag @tag2
Scenario: Calcular BMR con argumentos no validos         # uma/historias_bmr.feature:83
  Given tengo una calculadora de salud                   # uma.bdd.StepDefinitions.tengo_una_calculadora_de_salud()
  When calculo el BMR cuya entrada es 90.0, 200, 35, "h" # uma.bdd.StepDefinitions.calculo_el_bmr_cuya_entrada_es(float,java.lang.Integer,java.lang.Integer,java.lang.String)
  Then el sistema lanza una excepcion                    # uma.bdd.StepDefinitions.el_sistema_lanza_una_excepcion()

@tag @tag2
Scenario: Calcular BMR con argumentos no validos         # uma/historias_bmr.feature:84
  Given tengo una calculadora de salud                   # uma.bdd.StepDefinitions.tengo_una_calculadora_de_salud()
  When calculo el BMR cuya entrada es 65.0, 140, 40, "y" # uma.bdd.StepDefinitions.calculo_el_bmr_cuya_entrada_es(float,java.lang.Integer,java.lang.Integer,java.lang.String)
  Then el sistema lanza una excepcion                    # uma.bdd.StepDefinitions.el_sistema_lanza_una_excepcion()

@tag @tag2
Scenario: Calcular BMR con argumentos no validos         # uma/historias_bmr.feature:85
  Given tengo una calculadora de salud                   # uma.bdd.StepDefinitions.tengo_una_calculadora_de_salud()
  When calculo el BMR cuya entrada es 75.0, 300, 45, "o" # uma.bdd.StepDefinitions.calculo_el_bmr_cuya_entrada_es(float,java.lang.Integer,java.lang.Integer,java.lang.String)
  Then el sistema lanza una excepcion                    # uma.bdd.StepDefinitions.el_sistema_lanza_una_excepcion()

@tag @tag2
Scenario: Calcular BMR con argumentos no validos         # uma/historias_bmr.feature:86
  Given tengo una calculadora de salud                   # uma.bdd.StepDefinitions.tengo_una_calculadora_de_salud()
  When calculo el BMR cuya entrada es 55.0, 180, 25, "p" # uma.bdd.StepDefinitions.calculo_el_bmr_cuya_entrada_es(float,java.lang.Integer,java.lang.Integer,java.lang.String)
  Then el sistema lanza una excepcion                    # uma.bdd.StepDefinitions.el_sistema_lanza_una_excepcion()

@tag @tag2
Scenario: Calcular BMR con argumentos no validos         # uma/historias_bmr.feature:87
  Given tengo una calculadora de salud                   # uma.bdd.StepDefinitions.tengo_una_calculadora_de_salud()
  When calculo el BMR cuya entrada es 65.0, 170, 30, "r" # uma.bdd.StepDefinitions.calculo_el_bmr_cuya_entrada_es(float,java.lang.Integer,java.lang.Integer,java.lang.String)
  Then el sistema lanza una excepcion                    # uma.bdd.StepDefinitions.el_sistema_lanza_una_excepcion()

@tag @tag2
Scenario: Calcular BMR con argumentos no validos         # uma/historias_bmr.feature:88
  Given tengo una calculadora de salud                   # uma.bdd.StepDefinitions.tengo_una_calculadora_de_salud()
  When calculo el BMR cuya entrada es 70.0, 200, 35, "t" # uma.bdd.StepDefinitions.calculo_el_bmr_cuya_entrada_es(float,java.lang.Integer,java.lang.Integer,java.lang.String)
  Then el sistema lanza una excepcion                    # uma.bdd.StepDefinitions.el_sistema_lanza_una_excepcion()

@tag @tag2
Scenario: Calcular BMR con argumentos no validos         # uma/historias_bmr.feature:89
  Given tengo una calculadora de salud                   # uma.bdd.StepDefinitions.tengo_una_calculadora_de_salud()
  When calculo el BMR cuya entrada es 50.0, 140, 40, "e" # uma.bdd.StepDefinitions.calculo_el_bmr_cuya_entrada_es(float,java.lang.Integer,java.lang.Integer,java.lang.String)
  Then el sistema lanza una excepcion                    # uma.bdd.StepDefinitions.el_sistema_lanza_una_excepcion()

@tag @tag2
Scenario: Calcular BMR con argumentos no validos         # uma/historias_bmr.feature:90
  Given tengo una calculadora de salud                   # uma.bdd.StepDefinitions.tengo_una_calculadora_de_salud()
  When calculo el BMR cuya entrada es 60.0, 300, 45, "q" # uma.bdd.StepDefinitions.calculo_el_bmr_cuya_entrada_es(float,java.lang.Integer,java.lang.Integer,java.lang.String)
  Then el sistema lanza una excepcion                    # uma.bdd.StepDefinitions.el_sistema_lanza_una_excepcion()

@tag @tag1
Scenario: Calcular peso ideal hombre con entrada valida                   # uma/historias_usuario.feature:34
  Given tengo una calculadora de salud                                    # uma.bdd.StepDefinitions.tengo_una_calculadora_de_salud()
  When calculo el peso ideal con entrada valida de un hombre que mide 180 # uma.bdd.StepDefinitions.calculo_el_peso_ideal_con_entrada_valida_de_un_hombre_que_mide(java.lang.Integer)
  Then el peso ideal debería ser 72.5                                     # uma.bdd.StepDefinitions.el_peso_ideal_debería_ser(float)

@tag @tag1
Scenario: Calcular peso ideal hombre con entrada valida                   # uma/historias_usuario.feature:35
  Given tengo una calculadora de salud                                    # uma.bdd.StepDefinitions.tengo_una_calculadora_de_salud()
  When calculo el peso ideal con entrada valida de un hombre que mide 170 # uma.bdd.StepDefinitions.calculo_el_peso_ideal_con_entrada_valida_de_un_hombre_que_mide(java.lang.Integer)
  Then el peso ideal debería ser 65.0                                     # uma.bdd.StepDefinitions.el_peso_ideal_debería_ser(float)

@tag @tag1
Scenario: Calcular peso ideal hombre con entrada valida                   # uma/historias_usuario.feature:36
  Given tengo una calculadora de salud                                    # uma.bdd.StepDefinitions.tengo_una_calculadora_de_salud()
  When calculo el peso ideal con entrada valida de un hombre que mide 200 # uma.bdd.StepDefinitions.calculo_el_peso_ideal_con_entrada_valida_de_un_hombre_que_mide(java.lang.Integer)
  Then el peso ideal debería ser 87.5                                     # uma.bdd.StepDefinitions.el_peso_ideal_debería_ser(float)

@tag @tag1
Scenario: Calcular peso ideal hombre con entrada valida                   # uma/historias_usuario.feature:37
  Given tengo una calculadora de salud                                    # uma.bdd.StepDefinitions.tengo_una_calculadora_de_salud()
  When calculo el peso ideal con entrada valida de un hombre que mide 140 # uma.bdd.StepDefinitions.calculo_el_peso_ideal_con_entrada_valida_de_un_hombre_que_mide(java.lang.Integer)
  Then el peso ideal debería ser 42.5                                     # uma.bdd.StepDefinitions.el_peso_ideal_debería_ser(float)

@tag @tag1
Scenario: Calcular peso ideal hombre con entrada valida                   # uma/historias_usuario.feature:38
  Given tengo una calculadora de salud                                    # uma.bdd.StepDefinitions.tengo_una_calculadora_de_salud()
  When calculo el peso ideal con entrada valida de un hombre que mide 300 # uma.bdd.StepDefinitions.calculo_el_peso_ideal_con_entrada_valida_de_un_hombre_que_mide(java.lang.Integer)
  Then el peso ideal debería ser 162.5                                    # uma.bdd.StepDefinitions.el_peso_ideal_debería_ser(float)

@tag @tag2
Scenario: Calcular peso ideal mujer con entrada valida                    # uma/historias_usuario.feature:48
  Given tengo una calculadora de salud                                    # uma.bdd.StepDefinitions.tengo_una_calculadora_de_salud()
  When calculo el peso ideal con entrada valida de una mujer que mide 160 # uma.bdd.StepDefinitions.calculo_el_peso_ideal_con_entrada_valida_de_una_mujer_que_mide(java.lang.Integer)
  Then el peso ideal debería ser 56.0                                     # uma.bdd.StepDefinitions.el_peso_ideal_debería_ser(float)

@tag @tag2
Scenario: Calcular peso ideal mujer con entrada valida                    # uma/historias_usuario.feature:49
  Given tengo una calculadora de salud                                    # uma.bdd.StepDefinitions.tengo_una_calculadora_de_salud()
  When calculo el peso ideal con entrada valida de una mujer que mide 170 # uma.bdd.StepDefinitions.calculo_el_peso_ideal_con_entrada_valida_de_una_mujer_que_mide(java.lang.Integer)
  Then el peso ideal debería ser 62.0                                     # uma.bdd.StepDefinitions.el_peso_ideal_debería_ser(float)

@tag @tag2
Scenario: Calcular peso ideal mujer con entrada valida                    # uma/historias_usuario.feature:50
  Given tengo una calculadora de salud                                    # uma.bdd.StepDefinitions.tengo_una_calculadora_de_salud()
  When calculo el peso ideal con entrada valida de una mujer que mide 190 # uma.bdd.StepDefinitions.calculo_el_peso_ideal_con_entrada_valida_de_una_mujer_que_mide(java.lang.Integer)
  Then el peso ideal debería ser 74.0                                     # uma.bdd.StepDefinitions.el_peso_ideal_debería_ser(float)

@tag @tag2
Scenario: Calcular peso ideal mujer con entrada valida                    # uma/historias_usuario.feature:51
  Given tengo una calculadora de salud                                    # uma.bdd.StepDefinitions.tengo_una_calculadora_de_salud()
  When calculo el peso ideal con entrada valida de una mujer que mide 140 # uma.bdd.StepDefinitions.calculo_el_peso_ideal_con_entrada_valida_de_una_mujer_que_mide(java.lang.Integer)
  Then el peso ideal debería ser 44.0                                     # uma.bdd.StepDefinitions.el_peso_ideal_debería_ser(float)

@tag @tag2
Scenario: Calcular peso ideal mujer con entrada valida                    # uma/historias_usuario.feature:52
  Given tengo una calculadora de salud                                    # uma.bdd.StepDefinitions.tengo_una_calculadora_de_salud()
  When calculo el peso ideal con entrada valida de una mujer que mide 300 # uma.bdd.StepDefinitions.calculo_el_peso_ideal_con_entrada_valida_de_una_mujer_que_mide(java.lang.Integer)
  Then el peso ideal debería ser 140.0                                    # uma.bdd.StepDefinitions.el_peso_ideal_debería_ser(float)

@tag @tag3
Scenario Outline: Manejar errores de altura inválida                           # uma/historias_usuario.feature:65
  Given tengo una calculadora de salud                                         # uma.bdd.StepDefinitions.tengo_una_calculadora_de_salud()
  When calculo el peso ideal con entrada no valida de una persona que mide 120 # uma.bdd.StepDefinitions.calculo_el_peso_ideal_con_entrada_no_valida_de_una_persona_que_mide(java.lang.Integer)
  Then el sistema lanza una excepcion                                          # uma.bdd.StepDefinitions.el_sistema_lanza_una_excepcion()

@tag @tag3
Scenario Outline: Manejar errores de altura inválida                           # uma/historias_usuario.feature:66
  Given tengo una calculadora de salud                                         # uma.bdd.StepDefinitions.tengo_una_calculadora_de_salud()
  When calculo el peso ideal con entrada no valida de una persona que mide 320 # uma.bdd.StepDefinitions.calculo_el_peso_ideal_con_entrada_no_valida_de_una_persona_que_mide(java.lang.Integer)
  Then el sistema lanza una excepcion                                          # uma.bdd.StepDefinitions.el_sistema_lanza_una_excepcion()

@tag @tag3
Scenario Outline: Manejar errores de altura inválida                          # uma/historias_usuario.feature:67
  Given tengo una calculadora de salud                                        # uma.bdd.StepDefinitions.tengo_una_calculadora_de_salud()
  When calculo el peso ideal con entrada no valida de una persona que mide 90 # uma.bdd.StepDefinitions.calculo_el_peso_ideal_con_entrada_no_valida_de_una_persona_que_mide(java.lang.Integer)
  Then el sistema lanza una excepcion                                         # uma.bdd.StepDefinitions.el_sistema_lanza_una_excepcion()

@tag @tag3
Scenario Outline: Manejar errores de altura inválida                           # uma/historias_usuario.feature:68
  Given tengo una calculadora de salud                                         # uma.bdd.StepDefinitions.tengo_una_calculadora_de_salud()
  When calculo el peso ideal con entrada no valida de una persona que mide 330 # uma.bdd.StepDefinitions.calculo_el_peso_ideal_con_entrada_no_valida_de_una_persona_que_mide(java.lang.Integer)
  Then el sistema lanza una excepcion                                          # uma.bdd.StepDefinitions.el_sistema_lanza_una_excepcion()

@tag @tag4
Scenario Outline: Manejar errores de genero inválido                            # uma/historias_usuario.feature:79
  Given tengo una calculadora de salud                                          # uma.bdd.StepDefinitions.tengo_una_calculadora_de_salud()
  When calculo el peso ideal con entrada no valida de una persona de genero "x" # uma.bdd.StepDefinitions.calculo_el_peso_ideal_con_entrada_no_valida_de_una_persona_de_genero(java.lang.String)
  Then el sistema lanza una excepcion                                           # uma.bdd.StepDefinitions.el_sistema_lanza_una_excepcion()

@tag @tag4
Scenario Outline: Manejar errores de genero inválido                            # uma/historias_usuario.feature:80
  Given tengo una calculadora de salud                                          # uma.bdd.StepDefinitions.tengo_una_calculadora_de_salud()
  When calculo el peso ideal con entrada no valida de una persona de genero "a" # uma.bdd.StepDefinitions.calculo_el_peso_ideal_con_entrada_no_valida_de_una_persona_de_genero(java.lang.String)
  Then el sistema lanza una excepcion                                           # uma.bdd.StepDefinitions.el_sistema_lanza_una_excepcion()

@tag @tag4
Scenario Outline: Manejar errores de genero inválido                            # uma/historias_usuario.feature:81
  Given tengo una calculadora de salud                                          # uma.bdd.StepDefinitions.tengo_una_calculadora_de_salud()
  When calculo el peso ideal con entrada no valida de una persona de genero "t" # uma.bdd.StepDefinitions.calculo_el_peso_ideal_con_entrada_no_valida_de_una_persona_de_genero(java.lang.String)
  Then el sistema lanza una excepcion                                           # uma.bdd.StepDefinitions.el_sistema_lanza_una_excepcion()
┌───────────────────────────────────────────────────────────────────────────────────┐
│ Share your Cucumber Report with your team at https://reports.cucumber.io          │
│ Activate publishing with one of the following:                                    │
│                                                                                   │
│ src/test/resources/cucumber.properties:          cucumber.publish.enabled=true    │
│ src/test/resources/junit-platform.properties:    cucumber.publish.enabled=true    │
│ Environment variable:                            CUCUMBER_PUBLISH_ENABLED=true    │
│ JUnit:                                           @CucumberOptions(publish = true) │
│                                                                                   │
│ More information at https://cucumber.io/docs/cucumber/environment-variables/      │
│                                                                                   │
│ Disable this message with one of the following:                                   │
│                                                                                   │
│ src/test/resources/cucumber.properties:          cucumber.publish.quiet=true      │
│ src/test/resources/junit-platform.properties:    cucumber.publish.quiet=true      │
└───────────────────────────────────────────────────────────────────────────────────┘
[INFO] Tests run: 67, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 1.116 s - in uma.bdd.RunCucumberTest
[INFO] 
[INFO] Results:
[INFO]
[INFO] Tests run: 67, Failures: 0, Errors: 0, Skipped: 0
[INFO]
[INFO] ------------------------------------------------------------------------
[INFO] BUILD SUCCESS
[INFO] ------------------------------------------------------------------------
[INFO] Total time:  4.817 s
[INFO] Finished at: 2024-04-09T17:58:00+02:00
[INFO] ------------------------------------------------------------------------